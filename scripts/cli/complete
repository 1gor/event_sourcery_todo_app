#!/usr/bin/env ruby
#/ Usage: complete [options] <todo_id>
#/ Mark a todo item as completed via the Todo web API.
#/    -c, --completed_on  completed_on      Date item was completed (default is today)
#/    -h, --help                            Show help

require 'optparse'
require 'optparse/date'
require 'securerandom'
require 'net/http'
require 'uri'
require 'json'

completed_on = Date.today

ARGV.options do |opts|
  opts.on('-c', '--completed_on completed_on', Date) { |date| completed_on = date }
  opts.on_tail('-h', '--help') { exec "grep ^#/<'#{__FILE__}'|cut -c4-" }

  opts.parse!
end

todo_id = ARGV[0]

unless todo_id
  $stderr.puts "Error: you must specify a todo_id to complete"
  exit 1
end

payload = {
  completed_on: completed_on,
}.select { |_, value| !value.nil? }

puts "Completing todo [#{todo_id}]: #{payload}"
uri = URI.parse("http://localhost:3000/todo/#{todo_id}/complete")
http = Net::HTTP.new(uri.host, uri.port)
request = Net::HTTP::Post.new(uri.path, 'Content-Type': 'text/json')
request.body = payload.to_json

response = http.request(request)

if response.code != '200'
  $stderr.puts 'Failed to complete todo'
  $stderr.puts response.body
  exit 1
end
